function isTargetSystem(e) {
    switch (e.toLowerCase()) {
    case "windows":
        return navigator.userAgent.indexOf("Win") != -1;
    case "mac":
        return navigator.userAgent.indexOf("Mac") != -1;
    case "linux":
        return navigator.userAgent.indexOf("Linux") != -1;
    case "unix":
        return navigator.userAgent.indexOf("X11") != -1;
    default:
        return !1
    }
}
function isRightBrowser() {
    var e = new Browser
      , t = e.name ? e.name.toLowerCase() : e.name
      , n = e.version;
    return "ie" == t ? !(n < 10) : "opera" != t && ("safari" == t || ("chrome" == t || "firefox" == t))
}
function setContinueBrowse() {
    document.cookie = "continueBrowse=true;path=/"
}
function isContinueBrowse() {
    var e = document.cookie.match("continueBrowse=([^;]*)(;|$)");
    return null  != e && e[1]
}
var Browser = function() {
    var e = {}
      , t = navigator.userAgent;
    e.isMobile = t.indexOf("Mobile") > -1;
    var n = t.indexOf("Opera") > -1;
    if (n) {
        var i = 0;
        if ("Opera" == navigator.appName)
            i = parseFloat(navigator.appVersion);
        else {
            var o = new RegExp("Opera (\\d+.\\d+)");
            o.test(t),
            i = parseFloat(RegExp.$1)
        }
        return e.name = "Opera",
        e.version = i,
        e
    }
    var a = t.indexOf("Chrome") > -1;
    if (a) {
        var s = new RegExp("Chrome/(\\d+\\.\\d+(?:\\.\\d+\\.\\d+))?");
        return s.test(t),
        e.name = "Chrome",
        e.version = parseFloat(RegExp.$1),
        e
    }
    var r = (t.indexOf("KHTML") > -1 || t.indexOf("Konqueror") > -1 || t.indexOf("AppleWebKit") > -1) && !a;
    if (r) {
        var l = t.indexOf("AppleWebKit") > -1
          , d = t.indexOf("Konqueror") > -1;
        if (l) {
            var c = new RegExp("Version/(\\d+(?:\\.\\d*)?)");
            c.test(t);
            parseFloat(RegExp.$1);
            return e.name = "Safari",
            e.version = parseFloat(RegExp.$1),
            e
        }
        if (d) {
            var u = new RegExp("Konqueror/(\\d+(?:\\.\\d+(?\\.\\d)?)?)");
            return u.test(t),
            e.name = "Konqueror",
            e.version = parseFloat(RegExp.$1),
            e
        }
    }
    var p = t.indexOf("compatible") > -1 && t.indexOf("MSIE") > -1 && !n;
    if (p) {
        var m = new RegExp("MSIE (\\d+\\.\\d+);");
        return m.test(t),
        e.name = "IE",
        e.version = parseFloat(RegExp.$1),
        e
    }
    var h = t.indexOf("Gecko") > -1 && !a && !r;
    if (h) {
        var f = new RegExp("rv:(\\d+\\.\\d+(?:\\.\\d+)?)");
        return f.test(t),
        e.name = "Firefox",
        e.version = parseFloat(RegExp.$1),
        e
    }
    return e
}
;
!function() {
    function e() {
        function e() {
            o("正在连接...");
            var e = "yunba_push_demo_1" + Math.floor(1e5 * Math.random());
            a.connect_by_customid(e, function(e, n) {
                e ? (o("连接成功..."),
                t(s)) : o(n)
            })
        }
        function t(e) {
            o("尝试订阅频道..."),
            a.subscribe({
                topic: e
            }, function(t, n) {
                o(t ? "已成功订阅频道：" + e : n)
            })
        }
        function n(e) {
            a.unsubscribe({
                topic: e
            }, function(e, t) {
                e && o(t)
            })
        }
        function i(e, t) {
            a.publish({
                topic: e,
                msg: t
            }, function(n, i) {
                n ? (console.log("消息发布成功"),
                o("{ topic: " + e + ", msg:" + t + " }")) : o(i)
            })
        }
        function o(e) {
            e && $("#console-message").append("<code>" + e + "</code><br>"),
            $("#console").scrollTop($("#console")[0].scrollHeight)
        }
        var a = new Yunba({
            server: "sock.yunba.io",
            port: 443,
            secure: !0,
            appkey: "54d0c26252be1f7e1dd84c43"
        })
          , s = "my_topic_" + Math.floor(1e4 * Math.random());
        $("#input-topic").val(s),
        $("#link-push-demo").attr("href", "/quickstart/push/" + s + "/"),
        a.init(function(t) {
            o("正在初始化..."),
            t ? (o("初始化成功..."),
            e()) : o("初始化失败或服务断线，若长时间无响应请尝试刷新页面")
        }, function() {
            o("服务断线，正在尝试重新连接..."),
            e()
        });
        var r = new QRCode("qrcode",{
            text: window.location.href + "push/" + s + "/",
            width: 128,
            height: 128,
            colorDark: "#000000",
            colorLight: "#ffffff"
        });
        $("#btn-subscribe").click(function() {
            var e = $("#input-topic").val();
            "" == e ? o("请输入频道名称") : /^[a-zA-Z0-9\_]{1,32}$/.test(e) ? (s = e,
            n(s),
            t(s),
            $("#link-push-demo").attr("href", "/quickstart/push/" + s + "/"),
            r.makeCode(window.location.href + "push/" + s + "/")) : o("频道名称只能由大小写英文字母、_、与数字组成，不能超过32")
        }),
        $("#btn-send").click(function() {
            var e = $("#input-message").val();
            if (a.socket_connected)
                i(s, e);
            else {
                var n = "yunba_push_demo_1" + Math.floor(1e5 * Math.random());
                a.connect_by_customid(n, function(n, o) {
                    n && (t(s),
                    i(s, e))
                })
            }
        }),
        $(window).on("unload", function() {
            n(s)
        })
    }
    function t() {
        function e() {
            s.set_message_cb(function(e) {
                o("Msg:" + e.msg)
            })
        }
        function t() {
            var e = "yunba_push_demo_2" + Math.floor(1e5 * Math.random());
            s.connect_by_customid(e, function(e, t) {
                e ? (o("连接成功..."),
                n(a)) : o(t)
            })
        }
        function n(t) {
            s.subscribe({
                topic: t
            }, function(n, i) {
                n ? (o("你已成功订阅频道："),
                o(t),
                e()) : o(i)
            })
        }
        function i(e) {
            s.unsubscribe({
                topic: e
            }, function(e, t) {
                e && o(t)
            })
        }
        function o(e) {
            $("#console-message").append("<code>" + e + "</code><br>"),
            $("#console").scrollTop($("#console")[0].scrollHeight)
        }
        $(".quickstart-push-demo-console").css("height", $(window).height() - $(".top-bar").height() - $(".footer").height());
        var a = location.href.match(/quickstart\/push\/([^\/]+)\//)[1]
          , s = new Yunba({
            server: "sock.yunba.io",
            port: 443,
            secure: !0,
            appkey: "54d0c26252be1f7e1dd84c43"
        });
        s.init(function(e) {
            e ? (o("初始化成功..."),
            t()) : o("初始化失败或服务断线，若长时间无响应请尝试刷新页面")
        }, function() {
            o("服务断线，正在尝试重新连接..."),
            t()
        }),
        $(window).on("unload", function() {
            i(a)
        })
    }
    var n = window.app = {};
    n.home = function() {
        $(function() {
            function e(t) {
                f || (clearTimeout(c),
                c = setTimeout(e, 5e3),
                u.eq(h).fadeOut(function() {
                    void 0 != t ? h = t : h++,
                    h >= m && (h = 0),
                    p.eq(h).addClass("active").siblings().removeClass("active"),
                    u.eq(h).fadeIn()
                }))
            }
            var t = $(window)
              , n = $(".top-bar")
              , i = $(".home-hero h2").offset().top - n.height();
            t.scroll(function() {
                var e = $(window).scrollTop();
                e >= i ? n.data("white") || n.data("white", !0) : n.data("white") && n.data("white", !1)
            });
            var o = $(".home-hero-img-wrap")
              , a = $(".home-hero-img")
              , s = $(".home-hero-row a").height() + 2 * $(".home-hero-row p").height() + $(".home-hero-row h2").height()
              , r = ($(".stars"),
            function() {
                var e = Math.min(Math.max(710, t.height() - o.offset().top), Math.max(a.height() + s, 485));
                o.css("height", e)
            }
            );
            t.resize(r),
            r();
            var l, d = 0;
            $("#home-video-modal").on("show.bs.modal", function() {
                var e = $(['<video id="yunba-mg-video" width="800" height="450" preload="none" class="video-js">', '<source src="https://od7uu00in.qnssl.com/yunba-mg.mp4" type="video/mp4">', "</video>"].join(""));
                $("#video-wrapper").html(e),
                l = videojs("yunba-mg-video", {
                    controls: !0,
                    autoplay: !1,
                    preload: "none"
                }, function() {
                    l.currentTime(d),
                    l.play()
                });
                var t = $(window).width()
                  , n = Math.min(parseInt(.8 * t), 800)
                  , i = 45 * n / 80;
                l.height(i),
                l.width(n),
                $(".home-video-modal").find(".modal-dialog").css({
                    width: n + "px"
                }).find(".modal-content").css({
                    height: i + "px",
                    width: n + "px",
                    margin: "-" + i / 2 + "px auto 0px auto"
                })
            }).on("hide.bs.modal", function() {
                d = l.currentTime(),
                l.dispose()
            });
            var c, u = $(".home-slide"), p = $(".home-slide-status a"), m = u.length, h = 0, f = !1;
            $(".home-slide-status").delegate("a", "click", function(t) {
                return $target = $(t.currentTarget),
                e($target.index()),
                !1
            }),
            e()
        })
    }
    ,
    n.quickstart = function() {
        $(function() {
            e(),
            $(".lang-javascript").addClass("prettyprint lang-javascript linenums"),
            prettyPrint()
        })
    }
    ,
    n.quickstartPushDemo = function() {
        $(function() {
            t()
        })
    }
    ,
    n.products = function(e) {
        "index" == e && $(function() {
            var e = "products-hero-pointer-"
              , t = $(".products-hero-pointer");
            $(".products-hero").delegate("a", "click", function() {
                var n = $(this)
                  , i = $(n.data("tab"));
                return i.fadeIn().siblings().hide(),
                t.removeClass(e + t.data("item")).addClass(e + n.data("item")).data("item", n.data("item")),
                !1
            });
            var n = location.hash;
            ["#push", "#realtime", "#analytics", "#presence"].indexOf(n) > -1 && $('.products-hero a[href="' + n + '"]').click()
        })
    }
    ,
    n.developer = function() {
        $.ajax({
            url: "/developers/sdkdownloadlink/",
            success: function(e) {
                $(function() {
                    $("#android-download-link").attr("href", e.sdkLink.androidDownloadLink),
                    $("#ios-download-link").attr("href", e.sdkLink.iosDownloadLink)
                })
            }
        })
    }
    ,
    n.emailRemind = function(e) {
        "true" == e && $.ajax({
            method: "post",
            url: "/userApi/verificationEmail"
        })
    }
    ,
    n.emailResend = function() {
        $(function() {
            function e(e, t) {
                function n() {
                    var n = +new Date
                      , o = Math.ceil((t - n) / 1e3);
                    o <= 0 ? (e.attr("disabled", !1),
                    window.clearInterval(i),
                    e.find(".count").empty()) : e.find(".count").text("(" + o + ")")
                }
                e.attr("disabled", !0);
                var i = e.data("interval");
                i && window.clearInterval(i),
                i = window.setInterval(n, 1e3),
                e.data("interval", i),
                n()
            }
            var t = $("#resend")
              , n = $('input[name="useremail"]').closest(".form-group");
            t.click(function() {
                $.ajax({
                    method: "post",
                    url: "/userApi/verificationEmail",
                    beforeSend: function() {
                        t.attr("disabled", !0),
                        n.removeClass("has-error"),
                        $(".help-block").empty()
                    },
                    success: function(n) {
                        $(".help-block").text("验证邮件已经发送, 请登录邮箱完成验证"),
                        e(t, n.verifyTime)
                    },
                    error: function(i) {
                        var o, a = i.responseJSON.msg;
                        n.addClass("has-error"),
                        a.email ? ($(".help-block").text(a.email),
                        t.attr("disabled", !1)) : a.verifyTime && (o = new Date(parseInt(a.verifyTime)),
                        $(".help-block").text("发送过于频繁, 请于稍后再发"),
                        e(t, a.verifyTime))
                    }
                })
            });
            var i = $("#update-email-form");
            i.validate({
                rules: {
                    email: {
                        required: !0,
                        email: !0
                    },
                    password: {
                        required: !0
                    }
                },
                messages: {
                    email: {
                        required: "请输入新的email",
                        email: "email地址格式不正确"
                    },
                    password: {
                        required: "请输入您的账号密码"
                    }
                },
                highlight: function(e) {
                    $(e).closest(".form-group").addClass("has-error")
                },
                unhighlight: function(e) {
                    $(e).closest(".form-group").removeClass("has-error")
                },
                submitHandler: function(e) {
                    var n = $(e)
                      , i = {
                        email: n.find('input[name="email"]').val(),
                        password: n.find('input[name="password"]').val()
                    };
                    $.ajax({
                        type: "post",
                        url: "/userApi/email",
                        contentType: "application/json;charset=utf-8",
                        data: JSON.stringify(i),
                        success: function(e) {
                            $('input[name="useremail"]').val(i.email),
                            $("#tab-nav-resend-email").click(),
                            t.click()
                        },
                        error: function(e) {
                            var t = e.responseJSON.msg
                              , i = {};
                            t.email && (i.email = t.email),
                            t.password && (i.password = t.password),
                            n.validate().showErrors(i)
                        }
                    })
                }
            })
        })
    }
    ,
    n.doc = function(e) {
        $(function() {
            function t() {
                var e = $(window).height() - a.outerHeight() - (o.is(":hidden") ? 0 : o.outerHeight());
                i.outerHeight(e),
                n.outerHeight(e)
            }
            var n = $(".sidebar")
              , i = $(".doc-content")
              , o = $(".doc-footer")
              , a = $(".top-bar");
            if ($(window).resize(t),
            t(),
            $("#document-tocify").tocify({
                context: ".doc-content",
                selectors: "h2,h3",
                extendPage: !1,
                theme: "none",
                hashGenerator: function(e, t) {
                    var n = "";
                    return n = t.text().toLowerCase(),
                    n = n.replace(/[—：:（）\(\)\.]/g, ""),
                    n = n.replace(/\s/g, "-")
                }
            }),
            window.location.hash || i.scrollTop(1),
            e && e.active) {
                $("#" + e.active).parents("li").addClass("active");
                var s = $(".sidebar").find(">ul>li.active");
                s.length > 0 && s.find(">ul").show().end()[0].scrollIntoView()
            }
            n.delegate(".dir", "click", function(e) {
                console.log("2");
                var t = $(e.currentTarget).siblings("ul").find("li:eq(0)").find("a").attr("href");
                return console.log(t),
                void 0 !== t && (window.location.href = t),
                !1
            });
            var r, l;
            $(".doc a").each(function() {
                r = $(this),
                l = r.attr("href"),
                l && 0 == l.indexOf("http") && l.indexOf("yunba.io") == -1 && r.attr("target", "_blank")
            }),
            e && e.active && $("h1").append('<a href="https://github.com/yunba/docs/blob/master/' + e.active + '.md" target="_blank" class="github-link"><img src="/static/img/github_logo.png" /><span>编辑文档</span></a>'),
            $(".doc-sidebar-ul").on("click", function(e) {})
        })
    }
    ,
    n.docSearch = function() {
        var e = function(e, t) {
            $(".doc-search-result-list").html("");
            var n = e.hits.total
              , i = t
              , o = e.hits.max_score
              , a = e.hits.hits;
            $(".search-time").text(" " + o + " "),
            $(".search-num").text(" " + n + " ");
            for (var s = $(".doc-search-result-list"), r = 0; r < a.length; r++) {
                var l = $("<div></div>").addClass("result-items")
                  , d = $("<div></div>").addClass("doc-items-header")
                  , c = $("<div></div>").addClass("doc-items-content")
                  , u = void 0 === a[r]._source.title ? "Yunba文档" : a[r]._source.title
                  , p = $("<a></a>").attr("href", "/docs/" + a[r]._id).html(u)
                  , m = $("<p></p>").html(a[r].highlight.body);
                d.append(p),
                c.append(m),
                l.append(d, c),
                s.append(l)
            }
            var h = $("<hr></hr>");
            s.append(l, h);
            var f = $(".doc-search-result-pageNum")
              , g = Math.ceil(n / 10);
            f.html("");
            for (var v = $("<ul></ul>"), r = 0, b = 1; r < g; r++,
            b++) {
                if (b === i)
                    var w = $("<li></li>").addClass("li-on").text(b);
                else
                    var w = $("<li></li>").text(b);
                v.append(w)
            }
            var y = i < g ? $("<li></li>").addClass("nextPage").text("下一页") : "";
            v.append(y),
            f.append(v)
        }
          , t = function(t, n, i) {
            var o = {};
            o.from = n,
            o.size = n + 10,
            o._source = {
                exclude: ["body", "updatedAt"]
            },
            o.query = {
                multi_match: {
                    query: t,
                    fields: ["body", "title"]
                }
            },
            o.highlight = {
                pre_tags: ["<tag1>", "<tag2>"],
                post_tags: ["</tag1>", "</tag2>"],
                fields: {
                    body: {
                        fragment_size: 120,
                        number_of_fragments: 1
                    },
                    title: {
                        fragment_size: 18,
                        number_of_fragments: 1
                    }
                }
            };
            var a = void 0 === i || "all" === i ? "/publicApi/yunba-doc/_search" : "/publicApi/yunba-doc/type_search"
              , s = {};
            s.data = o,
            s.type = i;
            var r = void 0 === i || "all" === i ? o : s;
            $.ajax({
                url: a,
                method: "POST",
                data: r,
                beforeSend: function() {
                    $("#modal-loading span").text("yunba.io正在为您加载..."),
                    $("#modal-loading").modal("show")
                }
            }).done(function(t) {
                var n = Number(o.from) / 10 + 1;
                200 === t.code ? e(t.data, n) : (alert("搜索服务器出错" + t.msg),
                console.log(t))
            }).fail(function(e, t) {
                console.log(e)
            }).always(function(e) {
                $("#modal-loading").modal("hide"),
                $("#modal-loading span").text("yunba.io正在为您跳转...")
            })
        }
        ;
        $(function() {
            if (void 0 !== $("#doc-search-input").val())
                $("#doc-search-input").on("keypress", function(e) {
                    if ("13" == e.keyCode) {
                        var t = $(e.target).val();
                        "" !== t.trim() && window.open("/docs/search/" + t, "_blank")
                    }
                });
            else {
                var e = $("#doc-search-input-type input").attr("field");
                t(e, 0),
                $("#doc-search-input-type").on("keypress", function(e) {
                    if ("13" == e.keyCode) {
                        var n = $("#doc-search-input-type input").val();
                        t(n, 0)
                    }
                }),
                $(".doc-search-nav").on("click", function(n) {
                    $(".doc-search-nav li").removeClass("active"),
                    $(n.target).parent().addClass("active");
                    var i = $(n.target).parent().attr("type")
                      , o = "" === $("#doc-search-input-type input").val() ? e : $("#doc-search-input-type input").val();
                    t(o, 0, i)
                }),
                $(".doc-search-result-pageNum").on("click", function(n) {
                    if ("下一页" !== $(n.target).text()) {
                        var i = "" === $("#doc-search-input-type input").val() ? e : $("#doc-search-input-type input").val()
                          , o = $(".doc-search-nav .active").attr("type")
                          , a = 10 * Number($(n.target).text()) - 10;
                        t(i, a, o)
                    } else {
                        var i = "" === $("#doc-search-input-type input").val() ? e : $("#doc-search-input-type input").val()
                          , o = $(".doc-search-nav .active").attr("type")
                          , a = 10 * Number($(".doc-search-result-pageNum .li-on").text());
                        t(i, a, o)
                    }
                })
            }
        })
    }
    ,
    n.comment = function(e) {
        function t(e, t) {
            $.ajax({
                method: "GET",
                url: "/publicApi/comment/" + e + "/" + t,
                beforeSend: function() {
                    $("#comment-loading").show(),
                    $("#comment-null").hide(),
                    $(".doc-comments-list-ul").html("")
                },
                success: function(e) {
                    if (200 === e.code && e.data) {
                        $("#comment-loading").hide(),
                        $("#comment-null").hide();
                        for (var t = e.data, n = 0; n < t.length; n++) {
                            var i = $("<li></li>")
                              , o = $("<span></span>")
                              , a = $("<span></span>")
                              , s = $("<span></span>")
                              , r = t[n].commentTimestamp
                              , l = new Date(r).toLocaleString().split(" ")
                              , d = l[0];
                            l[1];
                            "normal" === t[n].commentGrade ? (i.addClass("user-comment"),
                            o.text(t[n].userName).addClass("comment-user-span"),
                            a.text(" " + d + " \n").addClass("comment-time-span"),
                            s.text(t[n].commentContent).addClass("user-comment-content-span"),
                            i.append(o, a, s)) : (i.addClass("admin-comment"),
                            o.text(t[n].userName).addClass("comment-admin-span"),
                            a.text(" " + d + " \n").addClass("comment-time-span"),
                            s.text(t[n].commentContent).addClass("admin-comment-content-span"),
                            i.append(o, a, s)),
                            $(".doc-comments-list-ul").append(i)
                        }
                    } else
                        $("#comment-loading").hide(),
                        $("#comment-null").show()
                },
                error: function(e) {
                    $("#comment-loading").hide(),
                    $("#comment-null").show(),
                    console.log("网络出错")
                }
            })
        }
        var n = "";
        $.ajax({
            method: "get",
            url: "/publicApi/article/" + e,
            beforeSend: function() {},
            success: function(e) {
                if (200 === e.code && e.data.canComment === !0) {
                    n = e.data._id;
                    var t = e.data.com;
                    for (var i in t)
                        $(".yb-comment-all[version=" + i + "]").children().addClass("yb-has-comment-btn").removeClass("yb-comment-btn").children(".yb-comment-arrow").addClass("yb-has-comment-arrow").removeClass("yb-comment-arrow"),
                        $(".yb-comment-all[version=" + i + "]").find("span").text(t[i])
                } else
                    console.log("获取文章信息失败或者禁止评论！mark"),
                    $(".yb-comment-all").hide()
            },
            error: function(e) {
                console.log("网络出错")
            }
        }),
        $("#document-content p").each(function() {
            var e = '<div class="yb-comment yb-comment-all"><div class="yb-comment-btn"><div class="yb-comment-arrow"><em></em></div><span class="yb-comments-num">...</span></div></div>'
              , t = $(e)
              , n = $(this).attr("id");
            t.attr("version", n),
            $(this).append(t)
        }),
        $("#doc-comment").modal({
            backdrop: "static",
            keyboard: !1,
            show: !1
        }),
        $("#submitComment").on("click", function() {
            if ($("#comment-help-block-err").hide(),
            $("#comment-help-block-suc").hide(),
            "" === n)
                return alert("获取文章信息失败！该文章不允许评论"),
                !1;
            var i = {};
            i.commentContent = $("#comment-input").val(),
            i.tagId = $(".doc-comments-object").children().attr("version"),
            i.articleMark = e,
            i.tagContent = $(".doc-comments-object").html(),
            $.ajax({
                method: "POST",
                url: "/userApi/comment",
                data: i,
                beforeSend: function() {
                    if (i.commentContent.length > 200 || 0 === i.commentContent.length)
                        return $("#comment-help-block-err").text("评论不能为空且不能超过200个字符").show(),
                        !1
                },
                success: function(e) {
                    200 !== e.code ? ($("#comment-help-block-err").show(),
                    console.log("提交失败"),
                    console.log(e.msg)) : (t(n, i.tagId),
                    $("#comment-input").val(""))
                },
                error: function(e) {
                    console.log(e),
                    401 === e.status ? $("#comment-help-block-log").show() : ($("#comment-help-block-err").show(),
                    console.log("网络出错：comment"))
                }
            })
        }),
        $(".yb-comment-all").on("click", function() {
            var e = $("#doc-comment .doc-comments-object");
            e.html("");
            var i = $(this)
              , o = i.attr("version")
              , a = o
              , s = $("#" + a).clone();
            e.append(s),
            e.children().children(".yb-comment-all").hide(),
            t(n, o),
            $("#comment-help-block-suc").hide(),
            $("#comment-help-block-err").hide(),
            $("#comment-help-block-log").hide(),
            $("#doc-comment").modal("show")
        })
    }
    ,
    n.confirmUsername = function() {
        $(function() {
            function e(e) {
                $.ajax({
                    method: "post",
                    data: e,
                    url: "/userApi/username/modifyUsername",
                    beforeSend: function() {},
                    success: function(e) {
                        i.attr("disabled", !1),
                        200 === e.code ? (s.text(e.data),
                        window.location.href = "/portal-v2/") : 201 === e.code ? s.text(e.data) : 202 === e.code ? s.text(e.data) : 203 === e.code ? s.text(e.data) : 206 === e.code ? r.text(e.data) : s.text("请求失败请检查网络连接,或者联系管理员")
                    },
                    error: function(e) {
                        i.attr("disabled", !1),
                        s.text("请求失败请检查网络连接,或者联系管理员"),
                        console.log(e)
                    }
                })
            }
            function t(e) {
                return l.hide(),
                e.val().trim().length > 16 ? (s.text("用户名请小于16个字符"),
                !1) : 0 == e.val().trim().length ? (s.text("用户名不能为空"),
                !1) : !!/^[a-zA-Z0-9\-\_]+$/.test(e.val().trim()) || (s.text("用户名只能是英文字母、数字、'-', '_'组成"),
                !1)
            }
            function n(e) {
                l.hide();
                var t = e.val().trim()
                  , n = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                return !!n.test(t) || (r.text("邮箱格式不正确"),
                !1)
            }
            var i = $("#confirmBtn")
              , o = $("#usernameInput")
              , a = $("#emailInput")
              , s = $(".help-block-username")
              , r = $(".help-block-email")
              , l = $(".help-block-tips")
              , d = {};
            d.username = o.val().trim(),
            i.on("click", function() {
                d.newUsername = o.val().trim(),
                d.email = a.val().trim(),
                s.text(""),
                r.text(""),
                t(o) && n(a) ? (e(d),
                i.attr("disabled", !0)) : i.attr("disabled", !1)
            })
        })
    }
    ,
    n.docHistory = function(e) {
        function t(e) {
            for (var t = $("#docHistory"), n = e.length - 1; n >= 0; n--)
                t.append("<li><a href=" + e[n].url + ">" + e[n].name + "</a></li>")
        }
        var n = []
          , i = ""
          , o = {}
          , a = 6
          , s = $(".main-content li a ")
          , r = window.localStorage;
        window.localStorage ? (n = JSON.parse(r.getItem("yunba_doc_history")),
        null  !== n && t(n),
        s.on("click", function(e) {
            n = JSON.parse(r.getItem("yunba_doc_history")),
            o.url = $(this).attr("href"),
            o.name = $(this).text(),
            null  === n && (n = []),
            n.push(o),
            n = _.uniq(n, function(e, t, n) {
                return e.name
            }),
            n.length >= a ? (n = _.rest(n),
            i = JSON.stringify(n),
            r.setItem("yunba_doc_history", i)) : (i = JSON.stringify(n),
            r.setItem("yunba_doc_history", i))
        })) : console.log("用户浏览器竟然不支持localStorage!")
    }
    ,
    n.sdkdownloads = function() {
        function e(e) {
            var t = $("." + e);
            return $("html,body").animate({
                scrollTop: t.offset().top
            }, 350, function(e) {
                return console.log(e),
                !1
            }),
            !1
        }
        $(function() {
            $(".sdklist-link").on("click", function(t) {
                $(".sdklist-link-active img:eq(0)").addClass("hide"),
                $(".sdklist-link-active img:eq(1)").removeClass("hide"),
                $(".sdk-android").attr("style", "display:none"),
                $(".sdk-list a").removeClass("sdklist-link-active"),
                $("div[sdkName='" + $(this).text() + "']").attr("style", "display:block"),
                $(this).addClass("sdklist-link-active"),
                $("div[sdkName='" + $(this).text() + "']").addClass("sdk-list-transition-opacoty"),
                $(".sdklist-link-active img:eq(0)").removeClass("hide"),
                $(".sdklist-link-active img:eq(1)").addClass("hide"),
                e($(window).width() >= 1300 ? "sdk-list" : "sdk-release")
            })
        })
    }
    ,
    $(function() {
        isContinueBrowse() || isRightBrowser() || ($("#warning-browser").modal({
            backdrop: "static"
        }),
        $("#warning-browser-continue").click(function() {
            setContinueBrowse()
        }));
        var e = {
            APICloud: "http://www.apicloud.com/"
        }
          , t = '<ul class="list-unstyled">';
        $.each(e, function(e, n) {
            t += '<li><a href="' + n + '" rel="nofollow" target="_blank">' + e + "</a></li>"
        }),
        t += "</ul>",
        $(".footer-friend-links").append(t),
        $.ajax({
            url: "/publicApi/info/company",
            success: function(e) {
                var t = '<ul class="list-unstyled">';
                e.qqGroup && (t += "<li>QQ群: " + e.qqGroup + "</li>"),
                e.qqGroupLink && (t += '<li><a target="_blank" href="' + e.qqGroupLink + '"><img border="0" src="https://pub.idqqimg.com/wpa/images/group.png" alt="云巴支持群" title="云巴支持群"></a></li>'),
                t += "</ul>",
                $(".footer-qq-group").append(t)
            }
        })
    })
}(),
function() {
    "use strict";
    app = app || {},
    app.Login = Backbone.Model.extend({
        url: "/login/",
        defaults: {
            errors: [],
            errfor: {},
            username: "",
            password: ""
        }
    }),
    app.LoginView = Backbone.View.extend({
        el: "#modal-login",
        template: _.template(['<div class="modal-dialog">', '<div class="modal-content">', "<form>", '<div class="h3 modal-header text-center">登录</div>', '<div class="modal-body padding-40">', "<div>", "<% _.each(errors, function(err) { %>", '<div class="alert alert-danger alert-dismissable"><button type="button" data-dismiss="alert" class="close">&times;</button>', "<%= err %>", "</div>", "<% }); %>", "</div>", '<div class="form-group input-group <%= errfor.username ? " has-error " : " " %>">', '<div class="input-group-addon"><i class="glyphicon glyphicon-envelope min-width-30"></i></div><input type="text" placeholder="请输入用户名或电子邮箱" value="<%= username %>" id="login-username" class="form-control"></div><span class="alert-text"><%= errfor.username %></span>', '<div class="form-group input-group <%= errfor.password ? " has-error " : " " %>">', '<div class="input-group-addon"><i class="glyphicon glyphicon-lock min-width-30"></i></div><input type="password" placeholder="请输入登录密码" value="<%= password %>" id="login-password" class="form-control"></div><span class="alert-text"><%= errfor.password %></span><input type="hidden" name="returnUrl"></div>', '<div class="modal-footer">', '<div style="float:left;padding-top:5px">使用其它方式登录:', '<span style="margin:0 5px" id="github_connect_btn" class="oauth_btn"><a href="/auth/github/"><img src ="/static/img/github_logo.png" style="width:20px;padding-bottom:1px"></a></span>', '<span style="margin:0 10px 0 5px" id="qq" class="oauth_btn"><a href="/auth/qq/"><img src ="/static/img/qq_logo.png" style="width:20px"></a></span>', '<span style="margin:0" id="weibo" class="oauth_btn"><a href="/auth/weibo/"><img src = "/static/img/wb_logo.png" style="width:20px"></a></span>', "</div>", '<button data-toggle="modal" data-backdrop="static" data-target="#modal-forgot" data-dismiss="modal" class="btn btn-default">忘记密码?</button><button id="btn-login-close" type="button" data-dismiss="modal" class="btn btn-default">关闭</button><button id="btn-login" type="button" class="btn btn-primary">登录</button></div>', "</form>", "</div>", "</div>"].join("")),
        events: {
            "submit form": "preventSubmit",
            'keypress [id="login-username"]': "loginOnEnter",
            'keypress [id="login-password"]': "loginOnEnter",
            "click #btn-login": "login",
            "click .oauth_btn": "loading"
        },
        initialize: function() {
            this.model = new app.Login,
            this.listenTo(this.model, "sync", this.render),
            this.render()
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes)),
            this.$el.find('[id="login-username"]').focus()
        },
        preventSubmit: function(e) {
            e.preventDefault()
        },
        loginOnEnter: function(e) {
            13 === e.keyCode && (e.preventDefault(),
            "login-username" !== $(e.target).attr("id") && "login-password" !== $(e.target).attr("id") || this.login())
        },
        login: function() {
            NProgress.start(),
            this.model.save({
                username: this.$el.find('[id="login-username"]').val(),
                password: this.$el.find('[id="login-password"]').val()
            }, {
                success: function(e, t) {
                    if (NProgress.done(),
                    t.success) {
                        var n = app.loginView.$el.find('[name="returnUrl"]').val();
                        "/" !== n && "" !== n || (n = t.defaultReturnUrl),
                        location.href = n
                    } else
                        e.set(t)
                }
            })
        },
        loading: function() {
            $("#btn-login-close").click(),
            $("#modal-loading").modal({
                show: !0,
                backdrop: "static",
                keyboard: !1
            })
        }
    }),
    $(document).ready(function() {
        app.loginView = new app.LoginView
    })
}(),
function() {
    "use strict";
    app = app || {},
    app.Forgot = Backbone.Model.extend({
        url: "/login/forgot/",
        defaults: {
            success: !1,
            errors: [],
            errfor: {},
            email: ""
        }
    }),
    app.ForgotView = Backbone.View.extend({
        el: "#modal-forgot",
        template: _.template(['<div class="modal-dialog">', '<div class="modal-content">', "<form>", '<div class="h3 modal-header text-center">找回密码</div>', '<div class="modal-body padding-40">', "<div>", "<% _.each(errors, function(err) { %>", '<div class="alert alert-danger"><button type="button" data-dismiss="alert" class="close">&times;</button>', "<%= err %>", "</div>", "<% }); %>", "<% if (success) { %>", '<div class="alert alert-info">重置密码的说明已经发送到你的电子邮箱</div>', "<% } %>", "</div>", "<% if (!success) { %>", '<div class="form-group input-group <%= errfor.email ? " has-error " : " " %>">', '<div class="input-group-addon"><i style="min-width: 30px;" class="glyphicon glyphicon-envelope"></i></div><input type="text" placeholder="请输入电子邮箱" id="forgot-email" class="form-control"></div><span class="alert-text"><%= errfor.email %></span>', "<% } %>", "</div>", '<div class="modal-footer">', '<% if (!success) { %><button id="btn-forgot-return" type="button" data-toggle="modal" data-backdrop="static" data-target="#modal-login" data-dismiss="modal" class="btn btn-default">返回登录</button>', '<% } %><button id="btn-forgot-close" type="button" data-dismiss="modal" class="btn btn-default">关闭</button>', '<% if (!success) { %><button id="btn-forgot" type="button" class="btn btn-primary">重置密码</button>', "<% } %>", "</div>", "</form>", "</div>", "</div>"].join("")),
        events: {
            "submit form": "preventSubmit",
            'keypress [id="forgot-email"]': "forgotOnEnter",
            "click #btn-forgot": "forgot"
        },
        initialize: function() {
            this.model = new app.Forgot,
            this.listenTo(this.model, "sync", this.render),
            this.render()
        },
        render: function() {
            return this.$el.html(this.template(this.model.attributes)),
            this.$el.find('[id="#forgot-email"]').focus(),
            this
        },
        preventSubmit: function(e) {
            e.preventDefault()
        },
        forgotOnEnter: function(e) {
            13 === e.keyCode && (e.preventDefault(),
            this.forgot())
        },
        forgot: function() {
            NProgress.start(),
            this.$el.find("#btn-forgot").attr("disabled", !0),
            this.model.save({
                email: this.$el.find('[id="forgot-email"]').val()
            }),
            NProgress.done()
        }
    }),
    $(document).ready(function() {
        app.forgotView = new app.ForgotView
    })
}(),
function() {
    "use strict";
    app = app || {},
    app.Signup = Backbone.Model.extend({
        url: "/signup/",
        defaults: {
            errors: [],
            errfor: {},
            username: "",
            email: "",
            password: "",
            repassword: ""
        }
    }),
    app.SignupModalView = Backbone.View.extend({
        el: "#modal-signup",
        template: _.template(['<div class="modal-dialog">', '<div class="modal-content">', "<form>", '<div class="h3 modal-header text-center">注册</div>', '<div style="padding-top: 10px" class="modal-body padding-40">', "<div>", "<% _.each(errors, function(err) { %>", '<div style="margin-bottom:4px;" class="alert alert-danger alert-dismissable padding-v-10"><button type="button" data-dismiss="alert" class="close">&times;</button>', "<%= err %>", "</div>", "<% }); %>", "</div>", '<div class="form-group input-group">', '<div class="input-group-addon"><i class="glyphicon glyphicon-envelope min-width-30"></i></div><input type="text" placeholder="电子邮箱" value="<%= email %>" id="signup-email" class="form-control"></div>', '<div class="form-group input-group">', '<div class="input-group-addon"><i class="glyphicon glyphicon-user min-width-30"></i></div><input type="text" placeholder="用户名" value="<%= username %>" id="signup-username" class="form-control"></div>', '<div class="form-group input-group">', '<div class="input-group-addon"><i class="glyphicon glyphicon-lock min-width-30"></i></div><input type="password" placeholder="密码" id="signup-password" class="form-control"></div>', '<div class="form-group input-group">', '<div class="input-group-addon"><i class="glyphicon glyphicon-check min-width-30"></i></div><input type="password" placeholder="确认登录密码" id="signup-repassword" class="form-control"></div>', '<div class="checkbox text-center">', "<label>", '<input type="checkbox" id="checkTermsInput"> 确认阅读并同意<a href="/terms/" target="_blank" class="a-blue"> Yunba.io 用户协议</a>。', "</label>", "</div>", "</div>", '<div class="modal-footer">', '<div style="float:left;padding-top:5px">使用第三方登录快速接入:', '<span style="margin:0 5px" id="github_connect_btn" class="oauth_btn"><a href="/auth/github/"><img src ="/static/img/github_logo.png" style="width:20px;padding-bottom:1px"></a></span>', '<span style="margin:0 10px 0 5px" id="qq" class="oauth_btn"><a href="/auth/qq/"><img src ="/static/img/qq_logo.png" style="width:20px"></a></span>', '<span style="margin:0" id="weibo" class="oauth_btn"><a href="/auth/weibo/"><img src = "/static/img/wb_logo.png" style="width:20px"></a></span>', "</div>", '<button id="btn-signup-close" type="button" data-dismiss="modal" class="btn btn-default">关闭</button>', '<button id="btn-signup" type="button" class="btn btn-primary" disabled="disabled" data-toggle="tooltip" data-placement="bottom" title="请勾选阅读并同意用户协议">创建一个新账号</button>', "</div>", "</form>", "</div>", "</div>"].join("")),
        events: {
            "submit form": "preventSubmit",
            'keypress [id="signup-password"]': "signupOnEnter",
            'keypress [id="signup-repassword"]': "signupOnEnter",
            "click #btn-signup": "signup",
            "click #checkTermsInput": "checkTerms"
        },
        initialize: function() {
            this.model = new app.Signup,
            this.listenTo(this.model, "sync", this.render),
            this.render()
        },
        render: function() {
            this.$el.html(this.template(this.model.attributes)),
            this.$el.find('[id="signup-email"]').focus()
        },
        preventSubmit: function(e) {
            e.preventDefault()
        },
        signupOnEnter: function(e) {
            13 === e.keyCode && (e.preventDefault(),
            "signup-password" !== $(e.target).attr("id") && "signup-repassword" !== $(e.target).attr("id") || this.signup())
        },
        checkTerms: function() {
            this.$el.find("#checkTermsInput").prop("checked") === !0 ? this.$el.find("#btn-signup").prop("disabled", !1) : this.$el.find("#btn-signup").prop("disabled", !0)
        },
        signup: function() {
            NProgress.start(),
            this.$el.find(".btn-signup").attr("disabled", !0),
            this.model.save({
                username: this.$el.find('[id="signup-username"]').val(),
                email: this.$el.find('[id="signup-email"]').val(),
                password: this.$el.find('[id="signup-password"]').val(),
                repassword: this.$el.find('[id="signup-repassword"]').val()
            }, {
                success: function(e, t) {
                    t.success ? location.href = "/email/verification-remind" : e.set(t),
                    NProgress.done()
                }
            })
        }
    }),
    $(document).ready(function() {
        app.signupModalView = new app.SignupModalView,
        $('[data-toggle="tooltip"]').tooltip()
    })
}(),
function() {
    "use strict";
    app = app || {},
    app.Terms = Backbone.Model.extend({
        defaults: {
            success: !1,
            errors: [],
            errfor: {},
            email: ""
        }
    }),
    $(document).ready(function() {})
}(),
function() {
    "use strict";
    app = app || {},
    app.Loading = Backbone.Model.extend({
        defaults: {
            success: !1,
            errors: [],
            errfor: {},
            email: ""
        }
    }),
    app.LoadingView = Backbone.View.extend({
        el: "#modal-loading",
        template: _.template(['<div class="modal-dialog">', '<div class="modal-content">', "<form>", '<div class="h3 modal-header text-center">请稍后</div>', '<div class="modal-body">', '<div class="loading_spinner_2">', '<div class="dot1"></div>', '<div class="dot2"></div>', "</div>", '<div style="text-align: center;"><span >yunba.io正在为您跳转...</span></div >', "</div>", "</form>", "</div>", "</div>"].join("")),
        events: {
            "submit form": "preventSubmit"
        },
        initialize: function() {
            this.render()
        },
        render: function() {
            return this.$el.html(this.template()),
            this
        },
        preventSubmit: function(e) {
            e.preventDefault()
        }
    }),
    $(document).ready(function() {
        app.loadingView = new app.LoadingView
    })
}();
